// class Node {
//     constructor(value) {
//         this.value = value;
//         this.left = null;
//         this.right = null;
//     }
// }

// class BinarySearchTree {
//     constructor() {
//         this.root = null;
//     }
    
//     insert(value) {
//         const node = new Node(value);
        
//         if(this.root === null) {
//             this.root = node;
//             return;
//         }
        
//         let current = this.root;
        
//         while(true) {
//             if(value < current.value) {
//                 if(current.left === null) {
//                     current.left = node;
//                     return;
//                 }
//                 current = current.left;
//             } else {
//                 if(current.right === null) {
//                     current.right = node;
//                     return;
//                 }
//                 current = current.right;
//             }
//         }
//     }
    
//     inorder(node) {
//         if(node !== null) {
//             this.inorder(node.left);
//             console.log(node.value);
//             this.inorder(node.right);
//         }
//     }
    
//     postOrder(node) {
//         if(node !== null) {
//             this.postOrder(node.left);
//             this.postOrder(node.right);
//             console.log(node.value);
//         }
//     }
    
//     Preorder(node) {
//         if(node !== null) {
//             console.log(node.value);
//             this.Preorder(node.left);
//             this.Preorder(node.right);
//         }
//     }
    
// }

// const bst = new BinarySearchTree();

// bst.insert(10);
// bst.insert(5);
// bst.insert(15);
// bst.insert(2);
// bst.insert(7);
// bst.insert(12);
// bst.insert(20);
// bst.inorder(bst.root);
// console.log("-----------------------")
// bst.postOrder(bst.root);
// console.log("-----------------------")
// bst.Preorder(bst.root);
